Matlab optimization 
Source: http://classes.soe.ucsc.edu/ee264/Fall11/matopt.pdf

Multithreaded Computation:

matlabpool, parfor, spmd

Vectorization:

repmat, meshgrid, cumsum, prod, cumprod, accumarray

Vectorized Logical Operations:

any(), all()

i.e. find([1,5,3] < [2,2,4]) = 1, 3
      any([1,5,3] < [2,2,4]) = 1 (true)
	  all([1,5,3] < [2,2,4]) = 0 (false)

Inlining functions:

replace the call to the function with the code of the function itself!

i.e. To repeat a vector n times to form a matrix instead of 
repmat(x,1,n) do x(:,ones(1,n)) !!!

Column Major Order:

Matlab stores matrices sequentially in a column by column fashion, so its always faster to scan matrices by columns thatn by rows

Signal Processing:

For large vectors, cumsum() is faster than filter()! So, for i.e. instead of filter for moving average use:

mov = filter(ones(m,1)/m, 1, x); 

faster_mov = cumsum(x)/m;
faster_mov(m+1:end) = faster_mov(m+1:end) - faster_mov(1:end-m);

Clipping:

clip a value by using the min/max functions
x = max(x, lowerBound); % elements < lowerBound will be replaced by lowerBound
x = min(x, upperBound); % elements > upperBound will be replaced by upperBound

Array to Vector:

If M is matrix, then M(:) is a one-dimensional vector.
That facilitates the use of max() or sum() functions. i.e. instead of 
min(min(M)) you can do min(M(:))









